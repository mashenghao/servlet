/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.39
 * Generated at: 2019-03-31 13:32:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package cn.mh.p1;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import javax.el.ExpressionFactory;
import javax.servlet.DispatcherType;
import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.servlet.jsp.JspFactory;
import javax.servlet.jsp.JspWriter;
import javax.servlet.jsp.PageContext;
import javax.servlet.jsp.SkipPageException;

import org.apache.jasper.runtime.HttpJspBase;
import org.apache.jasper.runtime.InstanceManagerFactory;
import org.apache.jasper.runtime.JspSourceDependent;
import org.apache.jasper.runtime.JspSourceImports;
import org.apache.tomcat.InstanceManager;

public final class P1Servlet2 extends HttpJspBase
		implements JspSourceDependent, JspSourceImports {

	private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

	private static Map<String, Long> _jspx_dependants;

	private static final Set<String> _jspx_imports_packages;

	private static final Set<String> _jspx_imports_classes;

	static {
		_jspx_imports_packages = new HashSet<>();
		_jspx_imports_packages.add("javax.servlet");
		_jspx_imports_packages.add("http");
		_jspx_imports_packages.add("jsp");
		_jspx_imports_classes = null;
	}

	private volatile ExpressionFactory _el_expressionfactory;
	private volatile InstanceManager _jsp_instancemanager;

	public Map<String, Long> getDependants() {
		return _jspx_dependants;
	}

	public Set<String> getPackageImports() {
		return _jspx_imports_packages;
	}

	public Set<String> getClassImports() {
		return _jspx_imports_classes;
	}

	public ExpressionFactory _jsp_getExpressionFactory() {
		if (_el_expressionfactory == null) {
			synchronized (this) {
				if (_el_expressionfactory == null) {
					_el_expressionfactory = _jspxFactory
							.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
				}
			}
		}
		return _el_expressionfactory;
	}

	public InstanceManager _jsp_getInstanceManager() {
		if (_jsp_instancemanager == null) {
			synchronized (this) {
				if (_jsp_instancemanager == null) {
					_jsp_instancemanager = InstanceManagerFactory
							.getInstanceManager(getServletConfig());
				}
			}
		}
		return _jsp_instancemanager;
	}

	public void _jspInit() {
	}

	public void _jspDestroy() {
	}

	public void _jspService(final HttpServletRequest request,
			final HttpServletResponse response) throws IOException, ServletException {

		final String _jspx_method = request.getMethod();
		if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)
				&& !DispatcherType.ERROR.equals(request.getDispatcherType())) {
			response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
			return;
		}

		final PageContext pageContext;
		HttpSession session = null;
		final ServletContext application;
		final ServletConfig config;
		JspWriter out = null;
		final Object page = this;
		JspWriter _jspx_out = null;
		PageContext _jspx_page_context = null;

		try {
			response.setContentType("text/html; charset=UTF-8");
			pageContext = _jspxFactory.getPageContext(this, request, response, null, true, 8192, true);
			_jspx_page_context = pageContext;
			application = pageContext.getServletContext();
			config = pageContext.getServletConfig();
			session = pageContext.getSession();
			out = pageContext.getOut();
			_jspx_out = out;

			out.write("\r\n");
			out.write(
					"<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
			out.write("<html>\r\n");
			out.write("<head>\r\n");
			out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
			out.write("<title>查看jsp编译成servlet代码</title>\r\n");
			out.write("</head>\r\n");
			out.write("<body>\r\n");
			out.write("\t<h1>你好---这是拷贝的jsp编译后的java代码-------</h1>\r\n");
			out.write("</body>\r\n");
			out.write("</html>");
		} catch (Throwable t) {
			if (!(t instanceof SkipPageException)) {
				out = _jspx_out;
				if (out != null && out.getBufferSize() != 0)
					try {
						if (response.isCommitted()) {
							out.flush();
						} else {
							out.clearBuffer();
						}
					} catch (IOException e) {
					}
				if (_jspx_page_context != null)
					_jspx_page_context.handlePageException(t);
				else
					throw new ServletException(t);
			}
		} finally {
			_jspxFactory.releasePageContext(_jspx_page_context);
		}
	}
}
